def COMMIT
def BRANCH_NAME

pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            app: nodejs
        spec:
          containers:
          - name: nodejs
            image: node:16-alpine3.16
            command:
            - cat
            tty: true
          - name: git
            image: bitnami/git:latest
            command:
            - cat
            tty: true
          - name: busybox
            image: busybox:latest
            command:
            - cat
            tty: true
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command:
            - cat
            tty: true
            volumeMounts:
            - name: kaniko-secret
              mountPath: /kaniko/.docker
          volumes:
          - name: kaniko-secret
            secret:
              secretName: regcred
              items:
                - key: .dockerconfigjson
                  path: config.json
      '''
    }      
  }
  environment{
    AWS_ACCOUNT_ID="365825155295"
    AWS_DEFAULT_REGION="us-east-1" 
    IMAGE_REPO_NAME="node-app"
    APP_NAME="node-js-hello-world"
    PIPELINE_NAME="node-js-pipeline"
    REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
  }
  stages {
    stage('Code checkout') {
      steps {
        script {
            container('git') {
              git url: 'https://github.com/NITHIN-JOHN-GEORGE/node-js-hello-world.git',
              branch: 'main'
              sh "git config --global --add safe.directory /home/jenkins/agent/workspace/${PIPELINE_NAME}"
              env.COMMIT = sh (script: "git rev-parse --short=10 HEAD", returnStdout: true).trim() 
              BRANCH_NAME = sh (returnStdout: true, script: 'git rev-parse --abbrev-ref HEAD').trim()
              env.TAG = "${BRANCH_NAME}-${env.COMMIT}-${currentBuild.number}"
        }
        }
      }
    }
    stage('OpsFile checkout') {
      steps {
          ws ("/home/jenkins/agent/workspace/${PIPELINE_NAME}/devops") 
          { 
            container('git') {
              git url: 'https://github.com/NITHIN-JOHN-GEORGE/devops-infra.git',
              branch: 'main'
        }
       }
      }
    }
    
    stage('Cleaning Up !!'){
      steps{
          script {
          container('busybox'){
          sh "rm -rf /home/jenkins/agent/workspace/${PIPELINE_NAME}/devops/Infrastructure"
          sh "rm -rf /home/jenkins/agent/workspace/${PIPELINE_NAME}/devops/README.md"
        }
        }
      }
    }

    stage('Build Docker Image & Push to ECR'){
      steps{
         script {
          container('kaniko'){
          TAG="${env.TAG}"
          env.IMAGE="${REPOSITORY_URI}" + ":" + "${TAG}"
          sh "/kaniko/executor --context $WORKSPACE --destination $IMAGE"
        }
         }
      }
    }

    stage('Updating Kubernetes deployment file'){
      steps {
        script {
          container('busybox')
          {
                IMAGE="${env.IMAGE}"
                sh 'sed -i "s|365825155295\\.dkr\\.ecr\\.us-east-1\\.amazonaws\\.com/node-app:.*|${IMAGE}|g" /home/jenkins/agent/workspace/${PIPELINE_NAME}/devops/deliverables/deployment.yml'
                sh "cat /home/jenkins/agent/workspace/${PIPELINE_NAME}/devops/deliverables/deployment.yml"
          }
         }
      }
    }

    stage('Pushing the New Changes to Deployment.yml file'){
      steps {
        script {
          dir("/home/jenkins/agent/workspace/${PIPELINE_NAME}/devops/deliverables") {
            container('git')
                {
                  COMMIT="${env.COMMIT}"
                  withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'pass', usernameVariable: 'user')]) {
                  sh """
                  git config --global --add safe.directory /home/jenkins/agent/workspace/${PIPELINE_NAME}/devops
                  git status
                  git add deployment.yml
                  git config --global user.name "nithin"
                  git config --global user.email "nithinjohn97@gmail.com"
                  git commit -m "Modified Deployment file with $COMMIT"
                  git remote set-url origin https://$pass@github.com/$user/devops-infra.git
                  git push origin main
                  """
                  }
                }
            }
         }
      }
    }

  }

}       

